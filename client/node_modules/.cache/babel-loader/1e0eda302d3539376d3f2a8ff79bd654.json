{"ast":null,"code":"import _defineProperty from\"D:/MERN/Contact-Management-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:/MERN/Contact-Management-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"D:/MERN/Contact-Management-system/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import ContactContext from\"../../context/contact/contactContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ContactForm(){var contactContext=useContext(ContactContext);var addContact=contactContext.addContact,current=contactContext.current,clearCurrent=contactContext.clearCurrent,updateContact=contactContext.updateContact;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:\"\",email:\"\",phone:\"\",type:\"personal\"});}// eslint-disable-next-line\n},[contactContext,current]);var _useState=useState({name:\"\",email:\"\",phone:\"\",type:\"personal\"}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){setContact(_objectSpread(_objectSpread({},contact),{},_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}clearAll();};var clearAll=function clearAll(){clearCurrent();};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-primary\",children:current?\"Edit Contact\":\"Add Contact\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Email\",name:\"email\",value:email,onChange:onChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Phone\",name:\"phone\",value:phone,onChange:onChange}),/*#__PURE__*/_jsx(\"h5\",{children:\"Contact type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"personal\",checked:type===\"personal\",onChange:onChange}),\"Personal\",\" \",/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:\"type\",value:\"professional\",checked:type===\"professional\",onChange:onChange}),\"Professional\",/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:current?\"Update Contact\":\"Add Contact\",className:\"btn btn-primary btn-block\"})}),current&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-light btn-block\",onClick:clearAll,children:\"Clear All\"})})]})});}export default ContactForm;","map":{"version":3,"sources":["D:/MERN/Contact-Management-system/client/src/components/contacts/ContactForm.jsx"],"names":["React","useState","useContext","useEffect","ContactContext","ContactForm","contactContext","addContact","current","clearCurrent","updateContact","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","clearAll"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport ContactContext from \"../../context/contact/contactContext\";\r\n\r\nfunction ContactForm() {\r\n  const contactContext = useContext(ContactContext);\r\n\r\n  const { addContact, current, clearCurrent, updateContact } = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (current !== null) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        type: \"personal\",\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [contactContext, current]);\r\n\r\n  const [contact, setContact] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    type: \"personal\",\r\n  });\r\n\r\n  const { name, email, phone, type } = contact;\r\n\r\n  const onChange = (e) => {\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (current === null) {\r\n      addContact(contact);\r\n    } else {\r\n      updateContact(contact);\r\n    }\r\n    clearAll();\r\n  };\r\n\r\n  const clearAll = () => {\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <h2 className=\"text-primary\">\r\n          {current ? \"Edit Contact\" : \"Add Contact\"}\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Phone\"\r\n          name=\"phone\"\r\n          value={phone}\r\n          onChange={onChange}\r\n        />\r\n        <h5>Contact type</h5>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"type\"\r\n          value=\"personal\"\r\n          checked={type === \"personal\"}\r\n          onChange={onChange}\r\n        />\r\n        Personal{\" \"}\r\n        <input\r\n          type=\"radio\"\r\n          name=\"type\"\r\n          value=\"professional\"\r\n          checked={type === \"professional\"}\r\n          onChange={onChange}\r\n        />\r\n        Professional\r\n        <div>\r\n          <input\r\n            type=\"submit\"\r\n            value={current ? \"Update Contact\" : \"Add Contact\"}\r\n            className=\"btn btn-primary btn-block\"\r\n          />\r\n        </div>\r\n        {current && (\r\n          <div>\r\n            <button className=\"btn btn-light btn-block\" onClick={clearAll}>\r\n              Clear All\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n"]},"metadata":{},"sourceType":"module"}