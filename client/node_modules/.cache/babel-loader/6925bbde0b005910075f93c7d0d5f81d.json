{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Contact-Management-system\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport axios from 'axios';\nimport contactContext from \"./contactContext\";\nimport { contactReducer } from \"./contactReducer\";\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from \"../types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; //   ADD_CONTACT\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post('api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; //   DELETE_CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //   SET_CURRENT\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //   CLEAR_CURRENT\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //   UPDATE_CONTACT\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //   FILTER_CONTACTS\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // CLear Contacts\n\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  }; //   CLEAR_FILTER\n\n\n  const clearFilter = text => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      updateContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      filterContacts,\n      clearFilter,\n      getContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["D:/MERN/Contact-Management-system/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","contactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContacts","res","get","type","payload","data","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearContacts","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport axios from 'axios';\r\nimport contactContext from \"./contactContext\";\r\nimport { contactReducer } from \"./contactReducer\";\r\n\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR\r\n} from \"../types\";\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: null,\r\n    current: null,\r\n    filtered: null,\r\n    error: null\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n\r\n  // Get Contacts\r\n  const getContacts =async () => {\r\n    try {\r\n      const res = await axios.get('api/contacts');\r\n      dispatch({ type: GET_CONTACTS, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\r\n    }\r\n  }\r\n\r\n  //   ADD_CONTACT\r\n  const addContact =async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    };\r\n    try {\r\n      const res = await axios.post('api/contacts', contact, config);\r\n      dispatch({ type: ADD_CONTACT, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\r\n    }\r\n  };\r\n\r\n  //   DELETE_CONTACT\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  //   SET_CURRENT\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  //   CLEAR_CURRENT\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  //   UPDATE_CONTACT\r\n  const updateContact = (contact) => {\r\n    dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n  };\r\n\r\n  //   FILTER_CONTACTS\r\n  const filterContacts = (text) => {\r\n    dispatch({ type: FILTER_CONTACTS, payload: text });\r\n  };\r\n\r\n  // CLear Contacts\r\n  const clearContacts = () => {\r\n    dispatch({ type: CLEAR_CONTACTS });\r\n  }\r\n\r\n  //   CLEAR_FILTER\r\n  const clearFilter = (text) => {\r\n    dispatch({ type: CLEAR_FILTER })\r\n  };\r\n\r\n  return (\r\n    <contactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        updateContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        filterContacts,\r\n        clearFilter,\r\n        getContacts\r\n      }}\r\n    >\r\n      {props.children}\r\n    </contactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}