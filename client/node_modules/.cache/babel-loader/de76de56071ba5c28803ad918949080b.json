{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\Contact-Management-system\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Logout User\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(authContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      clearErrors,\n      loadUser,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["D:/MERN/Contact-Management-system/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","authContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport authContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: null,\r\n        loading: true,\r\n        user: null,\r\n        error: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Load User\r\n    const loadUser = async () => {\r\n        if(localStorage.token) {\r\n            setAuthToken(localStorage.token);\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get('/api/auth');\r\n            dispatch({ type: USER_LOADED, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({ type: AUTH_ERROR })\r\n        }\r\n    }\r\n\r\n    // Register User\r\n    const register = async formData => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/users', formData, config);\r\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data });\r\n            loadUser();\r\n        } catch (err) {\r\n            dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg })\r\n        }\r\n    }\r\n\r\n    // Login User\r\n    const login = async formData => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/auth', formData, config);\r\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data });\r\n            loadUser();\r\n        } catch (err) {\r\n            dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg })\r\n        }\r\n    }\r\n\r\n    // Logout User\r\n    const logout = () => dispatch({ type: LOGOUT });\r\n\r\n    // Clear Errors\r\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS })\r\n\r\n    return (\r\n        <authContext.Provider\r\n            value={{\r\n                        token: state.token,\r\n                        isAuthenticated: state.isAuthenticated,\r\n                        loading: state.loading,\r\n                        user: state.user,\r\n                        error: state.error,\r\n                        register,\r\n                        clearErrors,\r\n                        loadUser,\r\n                        login,\r\n                        logout\r\n                    }}\r\n        >\r\n            {props.children}\r\n        </authContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}